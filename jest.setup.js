// Optional: configure or set up a testing framework before each test.\n// If you delete this file, remove `setupFilesAfterEnv` from `jest.config.js`\n\n// Used for __tests__/testing-library.js\n// Learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom'\n\n// Mock IntersectionObserver\nglobal.IntersectionObserver = class IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n}\n\n// Mock ResizeObserver\nglobal.ResizeObserver = class ResizeObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  unobserve() {}\n}\n\n// Mock matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: jest.fn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(), // deprecated\n    removeListener: jest.fn(), // deprecated\n    addEventListener: jest.fn(),\n    removeEventListener: jest.fn(),\n    dispatchEvent: jest.fn(),\n  })),\n})\n\n// Mock window.crypto\nObject.defineProperty(window, 'crypto', {\n  value: {\n    randomUUID: () => 'test-uuid-123',\n    getRandomValues: (array) => {\n      for (let i = 0; i < array.length; i++) {\n        array[i] = Math.floor(Math.random() * 256)\n      }\n      return array\n    },\n  },\n})\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n}\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock,\n})\n\n// Mock sessionStorage\nconst sessionStorageMock = {\n  getItem: jest.fn(),\n  setItem: jest.fn(),\n  removeItem: jest.fn(),\n  clear: jest.fn(),\n}\nObject.defineProperty(window, 'sessionStorage', {\n  value: sessionStorageMock,\n})\n\n// Mock next/router\njest.mock('next/router', () => ({\n  useRouter() {\n    return {\n      route: '/',\n      pathname: '/',\n      query: {},\n      asPath: '/',\n      push: jest.fn(),\n      pop: jest.fn(),\n      reload: jest.fn(),\n      back: jest.fn(),\n      prefetch: jest.fn(),\n      beforePopState: jest.fn(),\n      events: {\n        on: jest.fn(),\n        off: jest.fn(),\n        emit: jest.fn(),\n      },\n    }\n  },\n}))\n\n// Mock next/navigation\njest.mock('next/navigation', () => ({\n  useRouter() {\n    return {\n      push: jest.fn(),\n      replace: jest.fn(),\n      prefetch: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n    }\n  },\n  useSearchParams() {\n    return new URLSearchParams()\n  },\n  usePathname() {\n    return '/'\n  },\n}))\n\n// Mock Recharts\njest.mock('recharts', () => ({\n  LineChart: ({ children }) => <div data-testid=\"line-chart\">{children}</div>,\n  AreaChart: ({ children }) => <div data-testid=\"area-chart\">{children}</div>,\n  BarChart: ({ children }) => <div data-testid=\"bar-chart\">{children}</div>,\n  PieChart: ({ children }) => <div data-testid=\"pie-chart\">{children}</div>,\n  Line: () => <div data-testid=\"line\" />,\n  Area: () => <div data-testid=\"area\" />,\n  Bar: () => <div data-testid=\"bar\" />,\n  Pie: () => <div data-testid=\"pie\" />,\n  Cell: () => <div data-testid=\"cell\" />,\n  XAxis: () => <div data-testid=\"x-axis\" />,\n  YAxis: () => <div data-testid=\"y-axis\" />,\n  CartesianGrid: () => <div data-testid=\"cartesian-grid\" />,\n  Tooltip: () => <div data-testid=\"tooltip\" />,\n  Legend: () => <div data-testid=\"legend\" />,\n  ResponsiveContainer: ({ children }) => <div data-testid=\"responsive-container\">{children}</div>,\n}))\n\n// Mock Framer Motion\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, ...props }) => <div {...props}>{children}</div>,\n    span: ({ children, ...props }) => <span {...props}>{children}</span>,\n    button: ({ children, ...props }) => <button {...props}>{children}</button>,\n  },\n  AnimatePresence: ({ children }) => children,\n}))\n\n// Global test utilities\nglobal.console = {\n  ...console,\n  // Suppress console.log in tests\n  log: jest.fn(),\n  // Keep other console methods for debugging\n  error: console.error,\n  warn: console.warn,\n  info: console.info,\n  debug: console.debug,\n}\n\n// Setup timeout for async tests\njest.setTimeout(10000)\n"